@model  PagedList.IPagedList<RuchikaMVCCrud.Models.StudModel>
@using PagedList.Mvc

@{
    ViewBag.Title = "Index";
}
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-...." crossorigin="anonymous" />

    @if (ViewBag.ConfirmationScript != null)
    {
        <script>
            @Html.Raw(ViewBag.ConfirmationScript)

        </script>
    }
    <style>
        .pagination li {
            border: 1px solid #808080;
            padding: 8px;
            margin-right: 1px;
            display: inline-block; 
            background-color:lavender;
        }
    </style>
</head>
<body>
    <h2>Student Details</h2>


    <div class="container mt-5">
        <div class="row d-flex justify-content-between ">
            <div class="col-6  gap-1 ">
                <div class="d-flex gap-1 mt-3">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search">
                    <button class="btn btn-primary ml-2" onclick="searchData()">Search</button>
                </div>
            </div>

            <div class="col-6 d-flex justify-content-end gap-1">

                <div class="col-6">
                    <label for="pageSize">Page Size:</label>
                    @Html.DropDownList("pageSize", (SelectList)ViewBag.PageSize, new { @class = "form-control", onchange = "changePageSize()" })
                </div>

            </div>
        </div>
    </div>

    <div class="container mt-5">
        <div class="row d-flex justify-content-between ">
            <div class="col-6  d-flex gap-1 ">
                <p class="mb-2">
                    @*@Html.ActionLink("Add New Student", "AddEd", null, new { @class = "btn btn-primary" })*@
                    <a href="@Url.Action("AddEd")" class="btn btn-primary">
                        <i class="fas fa-user-plus"></i> Add Student
                    </a>
                </p>
                <p class="mb-2">
                    @*@Html.ActionLink("Deleted Records", "SoftDeletedRecords", null, new { @class = "btn btn-primary" })*@
                    <a href="@Url.Action("SoftDeletedRecords")" class="btn btn-danger" style="color: white;">
                        <i class="fas fa-trash"></i> Trash
                    </a>

                </p>
            </div>

            <div class="col-6 d-flex justify-content-end gap-1">

                <p>
                    @*@Html.ActionLink("Download Excel", "ExportStudDataToExcel", null, new { @class = "btn btn-success" })*@
                    <a href="@Url.Action("ExportStudDataToExcel")" class="btn btn-success">
                        <i class="fas fa-file-excel"></i> Download Excel
                    </a>
                </p>
                <p class="mb-2">
                    <a class="btn btn-warning" onclick="printDetails(); return false;">
                        <i class="fas fa-print"></i> Print
                    </a>
                </p>
            </div>
        </div>
    </div>
    <table class="table table-striped table-bordered" id="printableData">
        <thead class="table-dark">
            <tr>
                <th>
                    <a href="@Url.Action("Index", new { sortOrder = ViewBag.NameSortParm, search = ViewBag.Search })" style="color: white; text-decoration: none;">Name</a>
                </th>
                <th>
                    <a href="@Url.Action("Index", new { sortOrder = ViewBag.EmailSortParm, search = ViewBag.Search })" style="color: white; text-decoration: none;">EmailID</a>
                </th>
                <th>
                    <a href="@Url.Action("Index", new { sortOrder = ViewBag.AgeSortParm, search = ViewBag.Search })" style="color: white; text-decoration: none;">Age</a>
                </th>
                <th>
                    <a href="@Url.Action("Index", new { sortOrder = ViewBag.GenderSortParm, search = ViewBag.Search })" style="color: white; text-decoration: none;">Gender</a>
                </th>
                <th>
                    <a href="@Url.Action("Index", new { sortOrder = ViewBag.FeesSortParm, search = ViewBag.Search })" style="color: white; text-decoration: none;">Fees</a>
                </th>
                <th>
                    Skills
                </th>
                <th>Operations</th>
            </tr>
        </thead>

        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fees)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Skills)
                </td>
                <td class="d-flex justify-content-around">
                    <a href="@Url.Action("Edit", new { id = item.StudentID })" class="btn btn-info">
                        <i class="fas fa-edit"></i>
                    </a>
                    <a href="@Url.Action("Details", new { id = item.StudentID })" class="btn btn-secondary">
                        <i class="fas fa-eye"></i>
                    </a>
                    <a href="@Url.Action("DeleteConfirmed", new { id = item.StudentID })" class="btn btn-danger" onclick="confirmDelete(@ViewBag.RecordId)">
                        <i class="fas fa-trash-alt"></i>
                    </a>
                </td>
            </tr>
        }
    </table>
  
    @Html.PagedListPager(
    Model,
    page => Url.Action("Index", new{page,sortOrder = ViewBag.CurrentSort,searchString = ViewBag.CurrentFilter,pageSize = ViewBag.PageSize.SelectedValue}))
<script>
        function searchData() {
            // Get the value from the search input field
            var searchValue = document.getElementById('searchInput').value.toLowerCase();

            // Get all rows in the table body
            var tableRows = document.querySelectorAll('#printableData tbody tr');

            // Loop through each row and hide/show based on the search value
            tableRows.forEach(function (row) {
                var rowData = row.textContent.toLowerCase();

                // If the search value is found in the row data, show the row; otherwise, hide it
                if (rowData.includes(searchValue)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
        function printDetails() {
            let table = document.getElementById('printableData');
            let buttons = document.querySelectorAll('.btn');

            if (table) {
                buttons.forEach(button => {
                    button.style.display = 'none';
                });
                let printWindow = window.open('', '_blank');
                let tableWithStyle = table.outerHTML.replace(/<table /g, '<table style="border-collapse: collapse; border: 1px solid #000;"');
                tableWithStyle = tableWithStyle.replace(/<td/g, '<td style="border: 1px solid #000; padding: 8px;"');
                printWindow.document.write(tableWithStyle);
                printWindow.document.close();
                printWindow.print();

                buttons.forEach(button => {
                    button.style.display = '';
                });
            } else {
                console.error('table not found');
            }
        }
        function changePageSize() {
        var selectedPageSize = document.getElementById('pageSize').value;
        window.location.href = '@Url.Action("Index")?pageSize=' + selectedPageSize;
        }
         function confirmDelete(id) {
        if (confirm('Are you sure you want to delete this record?')) {
            window.location.href = '@Url.Action("DeleteConfirmed", new { id = "REPLACE_ID" })'.replace("REPLACE_ID", id);
        }
    }
</script>
</body>

